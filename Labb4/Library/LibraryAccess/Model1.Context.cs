//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibraryAccess
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BibliotekDatabasEntities : DbContext
    {
        public BibliotekDatabasEntities()
            : base("name=BibliotekDatabasEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AuthorList> AuthorLists { get; set; }
        public virtual DbSet<BookList> BookLists { get; set; }
        public virtual DbSet<CurrentLoan> CurrentLoans { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<UniqueBookCopy> UniqueBookCopies { get; set; }
        public virtual DbSet<vBookCustomer> vBookCustomers { get; set; }
        public virtual DbSet<vBooksAvailable> vBooksAvailables { get; set; }
    
        public virtual ObjectResult<string> usp_Add_Loan(Nullable<int> copyId, Nullable<int> customerId)
        {
            var copyIdParameter = copyId.HasValue ?
                new ObjectParameter("CopyId", copyId) :
                new ObjectParameter("CopyId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Add_Loan", copyIdParameter, customerIdParameter);
        }
    
        public virtual ObjectResult<string> usp_Return_Book(Nullable<int> copyId, Nullable<int> customerId)
        {
            var copyIdParameter = copyId.HasValue ?
                new ObjectParameter("CopyId", copyId) :
                new ObjectParameter("CopyId", typeof(int));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_Return_Book", copyIdParameter, customerIdParameter);
        }
    }
}
